buildscript {
    repositories {
        maven {
            url 'https://plugins.gradle.org/m2/'
        }
    }
    dependencies {
        classpath fileTree(dir: '../../build/libs', include: '*.jar', excludes: ['*javadoc.jar', '*sources.jar'])
        classpath 'gradle.plugin.edu.sc.seis.gradle:launch4j:1.6.1'
        classpath fileTree(include: ['*.jar'], dir: 'libs')
    }
}

plugins {
  id 'net.researchgate.release' version '2.4.0'
}

group = group
version = version

apply plugin: 'java'
apply plugin: 'edu.sc.seis.launch4j'

jar {
    from {
        configurations.compile.collect {
            it.isDirectory() ? it : zipTree(it)
        }
        configurations.runtime.collect {
            it.isDirectory() ? it : zipTree(it)
        }
    }
    manifest {
        attributes 'Main-Class': 'fr.maugin.thomas.App'
    }
}

repositories {
    mavenCentral()
    jcenter()
}

dependencies {
    compile 'net.java.dev.jna:jna-platform:4.2.2'

    compile 'io.reactivex:rxjava:1.1.2'

    compile 'net.dean.jraw:JRAW:0.8.0'

    compile 'org.yaml:snakeyaml:1.17'

    compile fileTree(include: ['*.jar'], dir: 'libs')

    compile 'io.reactivex:rxjavafx:0.0.5'

    compile 'com.google.inject:guice:4.0'

    testCompile group: 'junit', name: 'junit', version: '4.11'
}

task dist(type: Copy) {
    dependsOn 'launch4j'
    if (!file('build/dist/config.yaml').exists())
    copy {
        from 'src/main/resources/config/config.yaml'
        into 'build/dist'
    }
}

launch4j {
    mainClassName = 'fr.maugin.thomas.view.GUIApp'
    outfile= '../dist/reddit-wallpaper-changer.exe'
    dontWrapJar = false
    headerType = 'gui'
    chdir = '.'
    priority = 'normal'
    downloadUrl = 'http://java.com/download'
    stayAlive = 'false'
    restartOnCrash = true
    icon = '../../src/main/resources/icon/icon.ico'
    bundledJre64Bit = false
    bundledJreAsFallback = false
    jreMinVersion  = '1.8.0_00'
    jdkPreference = 'preferJre'
    jreRuntimeBits = '64/32'
    maxHeapSize = 20
}

release {
    failOnCommitNeeded = true
    failOnPublishNeeded = true
    failOnSnapshotDependencies = true
    failOnUnversionedFiles = true
    failOnUpdateNeeded = true
    revertOnFail = true
    preCommitText = ''
    preTagCommitMessage = '[Gradle Release Plugin] - pre tag commit: '
    tagCommitMessage = '[Gradle Release Plugin] - creating tag: '
    newVersionCommitMessage = '[Gradle Release Plugin] - new version commit: '
    tagTemplate = 'v${version}'
    versionPropertyFile = 'gradle.properties'
    versionProperties = ['version']
    buildTasks = ['dist']
    scmAdapters = [
        net.researchgate.release.GitAdapter,
        net.researchgate.release.SvnAdapter,
        net.researchgate.release.HgAdapter,
        net.researchgate.release.BzrAdapter
    ]

    git {
        requireBranch = 'master'
        pushToRemote = 'origin'
        pushToBranchPrefix = ''
        commitVersionFileOnly = false
    }

    svn {
        username = null
        password = null
        pinExternals = false   // allows to pin the externals when tagging, requires subversion client >= 1.9.0
    }
}